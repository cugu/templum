package blog

import "github.com/cugu/templum"

templ html(c *templum.PageContext, data string) {
	<html>
		<head>
			<title>{ c.Page.Title() }</title>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link href={ c.BaseURL + "favicon.ico" } rel="icon"/>
			<link rel="stylesheet" href="https://unpkg.com/normalize.css@8.0.1/normalize.css"/>
			<link rel="stylesheet" href="https://unpkg.com/concrete.css@2.1.1/concrete.css"/>
			<link href={ c.BaseURL + "style.css" } rel="stylesheet"/>
		</head>
		<body>
			<main>
				if c.Page.Order() == 0 {
					<header>
						if title, ok := c.Config["title"]; ok {
							<h1>{ title }</h1>
						}
						if description, ok := c.Config["description"]; ok {
							<p>
								@templ.Raw(description)
							</p>
						}
					</header>
					@links(c.Pages)
				} else {
					if title, ok := c.Config["title"]; ok {
						<a href={ templ.URL(c.BaseURL) }>
							<h1>{ title }</h1>
						</a>
					}
					<a href={ templ.URL(c.BaseURL) }>
						Home
					</a>
				}
				@templ.Raw(data)
				if c.Page.Order() != 0 {
					<footer>
						<hr/>
						<p>
							<a href={ templ.URL(c.BaseURL) }>
								Go back
							</a>
						</p>
					</footer>
				}
			</main>
		</body>
	</html>
}

templ links(pages []*templum.Page) {
	<ul>
		for _, page := range pages {
			<li>
				<a href={ templ.URL(page.Link()) }>
					{ page.Title() }
				</a>
				if len(page.Children()) > 0 {
					@links(page.Children())
				}
			</li>
		}
	</ul>
}
